package com.geminica.adf.chapter_three.model.entity;

import com.geminica.adf.chapter_three.model.entity.inheritance.MarketingBaseEmployeeEOImpl;

import oracle.jbo.AttributeList;
import oracle.jbo.Key;
import oracle.jbo.domain.Date;
import oracle.jbo.domain.Timestamp;
import oracle.jbo.server.AttributeDefImpl;
import oracle.jbo.server.EntityDefImpl;
import oracle.jbo.server.EntityImpl;
import oracle.jbo.server.TransactionEvent;
// ---------------------------------------------------------------------
// ---    File generated by Oracle ADF Business Components Design Time.
// ---    Mon Mar 04 21:44:48 CET 2013
// ---    Custom code may be added to this class.
// ---    Warning: Do not modify method signatures of generated methods.
// ---------------------------------------------------------------------
public class JobHistoryEOImpl extends EntityImpl {
    /**
     * AttributesEnum: generated enum for identifying attributes and accessors. Do not modify.
     */
    public enum AttributesEnum {
        EmployeeId {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getEmployeeId();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setEmployeeId((Integer)value);
            }
        }
        ,
        StartDate {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getStartDate();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setStartDate((Timestamp)value);
            }
        }
        ,
        EndDate {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getEndDate();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setEndDate((Timestamp)value);
            }
        }
        ,
        JobId {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getJobId();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setJobId((String)value);
            }
        }
        ,
        DepartmentId {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getDepartmentId();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setDepartmentId((Integer)value);
            }
        }
        ,
        SysEffectiveDate {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getSysEffectiveDate();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setSysEffectiveDate((Date)value);
            }
        }
        ,
        Employee {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getEmployee();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setEmployee((EmployeeEOImpl)value);
            }
        }
        ,
        Department {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getDepartment();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setDepartment((DepartmentEOImpl)value);
            }
        }
        ,
        MarketingBaseEmployee {
            public Object get(JobHistoryEOImpl obj) {
                return obj.getMarketingBaseEmployee();
            }

            public void put(JobHistoryEOImpl obj, Object value) {
                obj.setMarketingBaseEmployee((MarketingBaseEmployeeEOImpl)value);
            }
        }
        ;
        private static AttributesEnum[] vals = null;
        private static int firstIndex = 0;

        public abstract Object get(JobHistoryEOImpl object);

        public abstract void put(JobHistoryEOImpl object, Object value);

        public int index() {
            return AttributesEnum.firstIndex() + ordinal();
        }

        public static int firstIndex() {
            return firstIndex;
        }

        public static int count() {
            return AttributesEnum.firstIndex() + AttributesEnum.staticValues().length;
        }

        public static AttributesEnum[] staticValues() {
            if (vals == null) {
                vals = AttributesEnum.values();
            }
            return vals;
        }
    }


    public static final int EMPLOYEEID = AttributesEnum.EmployeeId.index();
    public static final int STARTDATE = AttributesEnum.StartDate.index();
    public static final int ENDDATE = AttributesEnum.EndDate.index();
    public static final int JOBID = AttributesEnum.JobId.index();
    public static final int DEPARTMENTID = AttributesEnum.DepartmentId.index();
    public static final int SYSEFFECTIVEDATE = AttributesEnum.SysEffectiveDate.index();
    public static final int EMPLOYEE = AttributesEnum.Employee.index();
    public static final int DEPARTMENT = AttributesEnum.Department.index();
    public static final int MARKETINGBASEEMPLOYEE = AttributesEnum.MarketingBaseEmployee.index();

    /**
     * This is the default constructor (do not remove).
     */
    public JobHistoryEOImpl() {
    }


    /**
     * @return the definition object for this instance class.
     */
    public static synchronized EntityDefImpl getDefinitionObject() {
        return EntityDefImpl.findDefObject("com.geminica.adf.chapter_three.model.entity.JobHistoryEO");
    }

    /**
     * Gets the attribute value for EmployeeId, using the alias name EmployeeId.
     * @return the value of EmployeeId
     */
    public Integer getEmployeeId() {
        return (Integer)getAttributeInternal(EMPLOYEEID);
    }

    /**
     * Sets <code>value</code> as the attribute value for EmployeeId.
     * @param value value to set the EmployeeId
     */
    public void setEmployeeId(Integer value) {
        setAttributeInternal(EMPLOYEEID, value);
    }

    /**
     * Gets the attribute value for StartDate, using the alias name StartDate.
     * @return the value of StartDate
     */
    public Timestamp getStartDate() {
        return (Timestamp)getAttributeInternal(STARTDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for StartDate.
     * @param value value to set the StartDate
     */
    public void setStartDate(Timestamp value) {
        setAttributeInternal(STARTDATE, value);
    }

    /**
     * Gets the attribute value for EndDate, using the alias name EndDate.
     * @return the value of EndDate
     */
    public Timestamp getEndDate() {
        return (Timestamp)getAttributeInternal(ENDDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for EndDate.
     * @param value value to set the EndDate
     */
    public void setEndDate(Timestamp value) {
        setAttributeInternal(ENDDATE, value);
    }

    /**
     * Gets the attribute value for JobId, using the alias name JobId.
     * @return the value of JobId
     */
    public String getJobId() {
        return (String)getAttributeInternal(JOBID);
    }

    /**
     * Sets <code>value</code> as the attribute value for JobId.
     * @param value value to set the JobId
     */
    public void setJobId(String value) {
        setAttributeInternal(JOBID, value);
    }

    /**
     * Gets the attribute value for DepartmentId, using the alias name DepartmentId.
     * @return the value of DepartmentId
     */
    public Integer getDepartmentId() {
        return (Integer)getAttributeInternal(DEPARTMENTID);
    }

    /**
     * Sets <code>value</code> as the attribute value for DepartmentId.
     * @param value value to set the DepartmentId
     */
    public void setDepartmentId(Integer value) {
        setAttributeInternal(DEPARTMENTID, value);
    }

    /**
     * Gets the attribute value for SysEffectiveDate, using the alias name SysEffectiveDate.
     * @return the value of SysEffectiveDate
     */
    public Date getSysEffectiveDate() {
        return (Date)getAttributeInternal(SYSEFFECTIVEDATE);
    }

    /**
     * Sets <code>value</code> as the attribute value for SysEffectiveDate.
     * @param value value to set the SysEffectiveDate
     */
    public void setSysEffectiveDate(Date value) {
        setAttributeInternal(SYSEFFECTIVEDATE, value);
    }

    /**
     * getAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param attrDef the attribute

     * @return the attribute value
     * @throws Exception
     */
    protected Object getAttrInvokeAccessor(int index, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            return AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].get(this);
        }
        return super.getAttrInvokeAccessor(index, attrDef);
    }

    /**
     * setAttrInvokeAccessor: generated method. Do not modify.
     * @param index the index identifying the attribute
     * @param value the value to assign to the attribute
     * @param attrDef the attribute

     * @throws Exception
     */
    protected void setAttrInvokeAccessor(int index, Object value, AttributeDefImpl attrDef) throws Exception {
        if ((index >= AttributesEnum.firstIndex()) && (index < AttributesEnum.count())) {
            AttributesEnum.staticValues()[index - AttributesEnum.firstIndex()].put(this, value);
            return;
        }
        super.setAttrInvokeAccessor(index, value, attrDef);
    }

    /**
     * @return the associated entity EmployeeEOImpl.
     */
    public EmployeeEOImpl getEmployee() {
        return (EmployeeEOImpl)getAttributeInternal(EMPLOYEE);
    }

    /**
     * Sets <code>value</code> as the associated entity EmployeeEOImpl.
     */
    public void setEmployee(EmployeeEOImpl value) {
        setAttributeInternal(EMPLOYEE, value);
    }

    /**
     * @return the associated entity DepartmentEOImpl.
     */
    public DepartmentEOImpl getDepartment() {
        return (DepartmentEOImpl)getAttributeInternal(DEPARTMENT);
    }

    /**
     * Sets <code>value</code> as the associated entity DepartmentEOImpl.
     */
    public void setDepartment(DepartmentEOImpl value) {
        setAttributeInternal(DEPARTMENT, value);
    }


    /**
     * @return the associated entity MarketingBaseEmployeeEOImpl.
     */
    public MarketingBaseEmployeeEOImpl getMarketingBaseEmployee() {
        return (MarketingBaseEmployeeEOImpl)getAttributeInternal(MARKETINGBASEEMPLOYEE);
    }

    /**
     * Sets <code>value</code> as the associated entity MarketingBaseEmployeeEOImpl.
     */
    public void setMarketingBaseEmployee(MarketingBaseEmployeeEOImpl value) {
        setAttributeInternal(MARKETINGBASEEMPLOYEE, value);
    }


    /**
     * @param employeeId key constituent
     * @param startDate key constituent

     * @return a Key object based on given key constituents.
     */
    public static Key createPrimaryKey(Integer employeeId, Timestamp startDate) {
        return new Key(new Object[]{employeeId, startDate});
    }

    /**
     * Add attribute defaulting logic in this method.
     * @param attributeList list of attribute names/values to initialize the row
     */
    protected void create(AttributeList attributeList) {
        super.create(attributeList);
    }

    /**
     * Add entity remove logic in this method.
     */
    public void remove() {
        super.remove();
    }

    /**
     * Add locking logic here.
     */
    public void lock() {
        super.lock();
    }

    /**
     * Custom DML update/insert/delete logic here.
     * @param operation the operation type
     * @param e the transaction event
     */
    protected void doDML(int operation, TransactionEvent e) {
        super.doDML(operation, e);
    }
}
